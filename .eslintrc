{
	"env": {
		"browser": true,
		"node": false
	},

	"globals": {},
	"parser": "babel-eslint",

	"parserOptions": {
		"ecmaVersion": 6,
		"sourceType": "module",

		"ecmaFeatures": {
			"experimentalObjectRestSpread": true,
			"modules": true,
			"jsx": true
		}
	},

	"plugins": [
		"react",
		"flowtype",
		"ottofeller"
	],

	"rules": {
		"arrow-parens": [2, "as-needed"],

		"comma-dangle": ["error", {
			"arrays": "always-multiline",
			"objects": "always-multiline",
			"imports": "always-multiline",
			"exports": "always-multiline",
			"functions": "always-multiline"
		}],

		"consistent-return"              : 0,
		"curly"                          : [0, "multi"],
		"eol-last"                       : [1],
		"flowtype/sort-keys"             : [2, "asc", {"caseSensitive": false,  "natural": true}],
		"flowtype/space-after-type-colon": [2, "always"],
		"flowtype/delimiter-dangle"      : [2, "always-multiline"],
		"flowtype/generic-spacing"       : [2, "never"],
		"flowtype/no-dupe-keys"          : 2,
		"flowtype/type-id-match"         : [2, "^T([A-Z][a-z0-9]*)+$"],

		"indent": [2, "tab", {
			"ArrayExpression": 1,
			"CallExpression": {"arguments": 1},
			"FunctionExpression": {"parameters": 1},
			"MemberExpression": 1,
			"ObjectExpression": 1,
			"VariableDeclarator": 1
		}],

		"react/jsx-curly-spacing"        : [1, "never"],
		"react/jsx-uses-react"           : 1,
		"react/jsx-uses-vars"            : 1,
		"react/jsx-boolean-value"        : ["error", "never"],
		"react/prefer-stateless-function": 2,
		"react/self-closing-comp"        : 2,
		"react/sort-prop-types"          : [1, {"ignoreCase": true}],
		"react/prop-types"               : 2,
		"react/no-multi-comp"            : 1,
		"key-spacing"                    : ["error", {"align": "colon"}],
		"lines-around-comment"           : [2, {"allowBlockStart": true, "beforeBlockComment": true, "beforeLineComment": true}],
		"max-len"                        : [2, {"code": 120, "ignoreUrls": true, "ignoreComments": true, "tabWidth": 2}],
		"no-debugger"                    : 1,
		"no-extra-semi"                  : 1,
		"no-mixed-spaces-and-tabs"       : ["error"],

		// Allow for spaced alignemnt of "=" and ":"
		"no-multi-spaces": [2, {"exceptions": {"Property": true, "AssignmentExpression": true}}],

		"no-spaced-func": [1],

		// We often change the lambda-function context with .bind()
		"no-extra-parens": 0,

		"no-unused-expressions"                     : [1],
		"no-shadow"                                 : [2],
		"no-unused-vars"                            : [2],
		"object-curly-spacing"                      : [1, "never"],
		"ottofeller/no-var-on-same-line"            : [2],
		"ottofeller/no-full-name-lambda-params"     : [2],
		"ottofeller/newline-around-multiline-blocks": [1],
		"padded-blocks"                             : [2, "never"],
		"sort-vars"                                 : [1, {"ignoreCase": true}],
		"sort-keys"                                 : ["error", "asc", {"caseSensitive": false}],
		"space-before-function-paren"               : [1, "never"],
		"space-before-blocks"                       : [2, "always"],

		"keyword-spacing": [2, {
			"after": false,
			"before": false,

			"overrides": {
				"catch" : {"after": false, "before": true},
				"else"  : {"after": true, "before": true},
				"export": {"after": true, "before": false},
				"from"  : {"after": true, "before": true},
				"import": {"after": true, "before": false},
				"return": {"after": true, "before": false},
				"try"   : {"after": true, "before": false}
			}
		}],

		"strict": [1, "never"],
		"quotes": [1, "single"]
	},

	"settings": {
		"flowtype": {
			"onlyFilesWithFlowAnnotation": true
		},

		"react": {
			"pragma": "React"
		}
	}
}
